group = "com.example.app_locker_plugin1_test"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.8.22"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.7.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.example.app_locker_plugin1_test"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    dependencies {
        implementation("libs.androidx.core.ktx")
        implementation("libs.androidx.lifecycle.runtime.ktx")
        implementation("libs.androidx.activity.compose")
        implementation platform("libs.androidx.compose.bom")
        implementation("libs.androidx.ui")
        implementation("libs.androidx.ui.graphics")
        implementation("libs.androidx.ui.tooling.preview")
        implementation("libs.androidx.material3")
        implementation("libs.androidx.appcompat")
        implementation("libs.material")
        implementation("libs.androidx.core")
        implementation("libs.androidx.core.ktx")
        testImplementation("libs.junit")
        androidTestImplementation("libs.androidx.junit")
        androidTestImplementation("libs.androidx.espresso.core")
        androidTestImplementation platform("libs.androidx.compose.bom")
        androidTestImplementation("libs.androidx.ui.test.junit4")
        debugImplementation("libs.androidx.ui.tooling")
        debugImplementation("libs.androidx.ui.test.manifest")
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.0.0")
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
